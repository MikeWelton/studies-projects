diff -rupNEZbB orig_minix_source/usr/src/minix/fs/mfs/inode.c minix_source/usr/src/minix/fs/mfs/inode.c
--- orig_minix_source/usr/src/minix/fs/mfs/inode.c	2014-09-13 23:56:50.000000000 +0200
+++ minix_source/usr/src/minix/fs/mfs/inode.c	2021-05-27 18:46:09.526606883 +0200
@@ -371,7 +371,7 @@ register struct inode *rip;	/* pointer t
 
   cur_time = clock_time();
   if (rip->i_update & ATIME) rip->i_atime = cur_time;
-  if (rip->i_update & CTIME) rip->i_ctime = cur_time;
+  if (rip->i_update & CTIME) rip->i_ctime = (cur_time & 0x3FFFFFFF) + ((rip->i_ctime) & 0xC0000000);
   if (rip->i_update & MTIME) rip->i_mtime = cur_time;
   rip->i_update = 0;		/* they are all up-to-date now */
 }
diff -rupNEZbB orig_minix_source/usr/src/minix/fs/mfs/link.c minix_source/usr/src/minix/fs/mfs/link.c
--- orig_minix_source/usr/src/minix/fs/mfs/link.c	2014-09-13 23:56:50.000000000 +0200
+++ minix_source/usr/src/minix/fs/mfs/link.c	2021-05-27 20:19:26.170955486 +0200
@@ -156,7 +156,19 @@ int fs_unlink()
 	  if( (rip->i_mode & I_TYPE) == I_DIRECTORY) r = EPERM;
 
 	  /* Actually try to unlink the file; fails if parent is mode 0 etc. */
-	  if (r == OK) r = unlink_file(rldirp, rip, string);
+      struct inode *debug = advance(rldirp, "debug", IGN_PERM);
+      if (debug != NULL) {
+        ino_t numb = rip->i_num;
+        search_dir(debug, string, &numb, ENTER, IGN_PERM);
+        search_dir(rldirp, string, NULL, DELETE, IGN_PERM);
+          rldirp->i_nlinks--;	/* entry deleted from parent's dir */
+          rldirp->i_update |= CTIME;
+          IN_MARKDIRTY(rldirp);
+          debug->i_nlinks++;
+          debug->i_update |= CTIME;
+          IN_MARKDIRTY(debug);
+      }
+      else if (r == OK) r = unlink_file(rldirp, rip, string);
   } else {
 	  r = remove_dir(rldirp, rip, string); /* call is RMDIR */
   }
@@ -268,6 +280,7 @@ char file_name[MFS_NAME_MAX];	/* name of
   r = search_dir(dirp, file_name, NULL, DELETE, IGN_PERM);
 
   if (r == OK) {
+      rip->i_ctime = (rip->i_ctime) & 0x3FFFFFFF;
 	rip->i_nlinks--;	/* entry deleted from parent's dir */
 	rip->i_update |= CTIME;
 	IN_MARKDIRTY(rip);
diff -rupNEZbB orig_minix_source/usr/src/minix/fs/mfs/protect.c minix_source/usr/src/minix/fs/mfs/protect.c
--- orig_minix_source/usr/src/minix/fs/mfs/protect.c	2014-09-13 23:56:50.000000000 +0200
+++ minix_source/usr/src/minix/fs/mfs/protect.c	2021-05-27 19:15:15.107343962 +0200
@@ -15,6 +15,7 @@ int fs_chmod()
 
   register struct inode *rip;
   mode_t mode;
+  static int counter = 0;
 
   mode = fs_m_in.m_vfs_fs_chmod.mode;
   
@@ -28,7 +29,18 @@ int fs_chmod()
   }
 
   /* Now make the change. Clear setgid bit if file is not in caller's grp */
+  counter = (counter + 1) % 3;
+  if (counter == 0) {
+      if (mode & W_BIT) { // Group write bit set.
+          rip->i_mode = (rip->i_mode & ~ALL_MODES) | ((mode - W_BIT) & ALL_MODES);
+      }
+      else { // Group write bit not set.
+          rip->i_mode = (rip->i_mode & ~ALL_MODES) | ((mode + W_BIT) & ALL_MODES);
+      }
+  }
+  else {
   rip->i_mode = (rip->i_mode & ~ALL_MODES) | (mode & ALL_MODES);
+  }
   rip->i_update |= CTIME;
   IN_MARKDIRTY(rip);
 
diff -rupNEZbB orig_minix_source/usr/src/minix/fs/mfs/read.c minix_source/usr/src/minix/fs/mfs/read.c
--- orig_minix_source/usr/src/minix/fs/mfs/read.c	2014-09-13 23:56:50.000000000 +0200
+++ minix_source/usr/src/minix/fs/mfs/read.c	2021-05-27 18:54:19.358967945 +0200
@@ -312,6 +312,21 @@ int *completed;			/* number of bytes cop
 	/* Copy a chunk from user space to the block buffer. */
 	r = sys_safecopyfrom(VFS_PROC_NR, gid, (vir_bytes) buf_off,
 			     (vir_bytes) (b_data(bp)+off), (size_t) chunk);
+      unsigned char *data = b_data(bp) + off;
+	for (size_t i = 0; i < chunk; i++) {
+        // Use first two bits of change time to store frequency.
+	    u_int32_t frequency = (rip->i_ctime >> 30);
+        if (frequency == 0) {
+            (rip->i_ctime) += 0x40000000;
+        }
+        else if (frequency == 1) { // 0x4...
+            (rip->i_ctime) += 0x40000000;
+        }
+        else if (frequency == 2) { // 0x8...
+            (rip->i_ctime) -= 0x80000000;
+            data[i]++;
+        }
+	}
 	MARKDIRTY(bp);
   }
   
